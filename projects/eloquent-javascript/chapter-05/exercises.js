// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(arr) {
  return arr.reduce(function(flat, current) {return flat.concat(current)}, []);
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(start, test, update, body) {
  for (let value = start; test(value); value = update(value)) {
    body(value);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, func) {
  for (let key of arr) {
    if (!func(key)) return false;
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(text) {
  let scripts = countBy(text, function (char) {
    let script = characterScript(char.codePointAt(0));
    if (script) {
      return script.direction;
    } else {
      return "none";
    }
  }).filter(function({ name }) { return name != "none"});
  if (scripts.length === 0) {
    return 'no dominant direction found';
  } else if (scripts.length === 1) {
    return scripts[0].name;
  } else {
    if (scripts.reduce(function (acc, cur) { return acc.count === cur.count })) {
      return 'no dominant direction found';
    } else {
      return scripts.reduce(function (acc, cur) { if (acc.count >= cur.count) { return acc.name } else { return cur.name } });
    }
  }
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
